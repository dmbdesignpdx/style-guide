{
	"array-bracket-spacing": "error",
	"array-bracket-newline": [
		"error",
		{
			"multiline": true,
			"minItems": 3
		}
	],
	"array-element-newline": ["error", {
			"ArrayExpression": "consistent",
			"ArrayPattern": { "minItems": 3 }
	}],
	"arrow-body-style": [
		"error",
		"as-needed"
	],
	"arrow-parens": [
		"error",
		"as-needed"
	],
	"block-spacing": "error",
	"brace-style": [
		"error",
		"1tbs",
		{
			"allowSingleLine": true
		}
	],
	"comma-dangle": [
		"error", 
		{
			"arrays": "always-multiline",
			"objects": "always-multiline",
			"imports": "always-multiline",
			"exports": "always-multiline",
			"functions": "never"
		}
	],
	"comma-spacing": "error",
	"comma-style": "error",
	"computed-property-spacing": "error",
	"curly": [
		"error",
		"multi-line"
	],
	"dot-location": ["error", "property"],
	"dot-notation": "error",
	"eol-last": "error",
	"eqeqeq": "error",
	"func-call-spacing": "error",
	"function-call-argument-newline": ["error", "consistent"],
	"function-paren-newline": ["error", "multiline-arguments"],
	"implicit-arrow-linebreak": "error",
	"indent": [
		"error",
		"tab",
		{
			"SwitchCase": 1,
			"ObjectExpression": 1,
			"MemberExpression": 1,
			"ignoredNodes": [
				"CallExpression > BlockStatement.body"
			]
		}
	],
	"jsx-quotes": "error",
	"key-spacing": "error",
	"keyword-spacing": [
		"error",
		{
			"after": true,
			"before": true,
			"overrides": {
				"case": {
					"before": false
				}
			}
		}
	],
	"linebreak-style": "error",
	"lines-around-comment": ["error", { "allowBlockStart": true }],
	"max-len": [
		"error",
		{
			"code": 100,
			"ignoreTemplateLiterals": true
		}
	],
	"newline-per-chained-call": "error",
	"no-confusing-arrow": "error",
	"no-else-return": "error",
	"no-empty": "off",
	"no-extra-bind": "error",
	"no-extra-boolean-cast": "off",
	"no-implicit-coercion": [
		2,
		{
			"allow": [
				"!!",
				"~"
			]
		}
	],
	"no-lonely-if": "error",
	"no-multi-spaces": "error",
	"no-multiple-empty-lines": "error",
	"no-trailing-spaces": "error",
	"no-undef-init": "error",
	"no-unneeded-ternary": "error",
	"no-useless-return": "error",
	"no-var": "error",
	"no-whitespace-before-property": "error",
	"object-curly-spacing": ["error", "always"],
	"object-curly-newline": [
		"error",
		{
			"consistent": true,
			"multiline": true,
			"minProperties": 3
		}
	],
	"object-property-newline": [
		"error",
		{
			"allowAllPropertiesOnSameLine": true
		}
	],
	"object-shorthand": "error",
	"one-var": [
		"error",
		{
			"let": "never",
			"const": "never",
			"separateRequires": true
		}
	],
	"operator-assignment": "error",
	"operator-linebreak": ["error", "before"],
	"padded-blocks": ["error", "never"],
	"padding-line-between-statements": [
		"error",
		{
			"blankLine": "always",
			"prev": [
				"let",
				"const"
			],
			"next": "block-like"
		},
		{
			"blankLine": "always",
			"prev": "*",
			"next": [
				"return"
			]
		},
		{
			"blankLine": "never",
			"prev": "*",
			"next": [
				"case",
				"default"
			]
		}
	],
	"prefer-arrow-callback": "error",
	"prefer-const": "error",
	"prefer-exponentiation-operator": "error",
	"prefer-template": "error",
	"quote-props": [
		"error",
		"as-needed"
	],
	"quotes": [
		"error",
		"single"
	],
	"rest-spread-spacing": "error",
	"semi": "error",
	"semi-style": "error",
	"space-before-blocks": "error",
	"space-before-function-paren": [
		"error",
		{
			"anonymous": "always",
			"named": "never",
			"asyncArrow": "always"
		}
	],
	"space-in-parens": [
		"error",
		"never"
	],
	"spaced-comment": "error",
	"template-curly-spacing": "error",
	"unicode-bom": "error",
	"yoda": "error",
	"accessor-pairs": "error",
	"consistent-return": "error",
	"react/display-name": "off",
	"react/jsx-max-props-per-line": ["error", { "maximum": 2 }],
	"react/jsx-closing-bracket-location": [
		"error",
		"tag-aligned"
	],
	"react/prop-types": "off",
	"react/jsx-wrap-multilines": [
		"error",
		{
			"declaration": "parens-new-line",
			"assignment": "parens-new-line",
			"return": "parens-new-line",
			"arrow": "parens-new-line",
			"condition": "parens-new-line",
			"logical": "parens-new-line"
		}
	],
	"react/react-in-jsx-scope": "off",
	"@typescript-eslint/no-var-requires": "off",
	"@typescript-eslint/no-use-before-define": "error",
	"@typescript-eslint/no-shadow": "error",
	"@typescript-eslint/ban-types": "off",
	"@typescript-eslint/no-non-null-assertion": "off"
}
